version: '3.8'

services:
  app:
    env_file: .devcontainer.env
    build: 
      context: .
      dockerfile: Dockerfile

    volumes:
      - ../..:/workspaces:cached
      - root:/root
      
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:postgres-db
    depends_on:
      - postgres-db
      - elasticsearch
      - dynamodb-local
    networks:
      - app-network

  # php-app:
  #   build:
  #     context: ./php-app  # Path to your new PHP project directory
  #     dockerfile: Dockerfile  # Dockerfile for PHP
  #   volumes:
  #     - ./php-app:/var/www
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - app-network

  postgres-db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose PostgreSQL port to host
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - app-network

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - app-network

  dynamodb-local:
    image: amazon/dynamodb-local
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - dynamodb_data:/home/dynamodblocal/data
    command: "-jar DynamoDBLocal.jar -sharedDb -inMemory"
    networks:
      - app-network
    environment:
      - ENABLE_DYNAMODB

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379" # Expose Redis port to host
    volumes:
      - redis-data:/data # Persist Redis data (optional)
    networks:
      - app-network

volumes:
  postgres-data:
  es_data:
  dynamodb_data:
  root:
  redis-data:

networks:
  app-network:
    driver: bridge
